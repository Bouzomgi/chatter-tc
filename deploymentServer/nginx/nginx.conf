user nginx;
worker_processes auto;

events {
  worker_connections 1024;
}

http {

  # Logging
  access_log /var/log/nginx/access.log;

  log_format url_transforms 'final uri="$uri" original="$request_uri"';
  access_log /var/log/nginx/url_transforms.log url_transforms; error_log /var/log/nginx/error.log;

  # Docker DNS resolver
  resolver 127.0.0.11 valid=30s;

  server {
    listen 80;

    server_name localhost;

    # --- FRONTEND ---

    location / {
      proxy_pass $frontendRed;
    }

    location /test {
      if ($enableFrontendTestRoute = 0) {
        return 403;
      }

      # Remove the /test prefix from the URL
      rewrite ^/test(/.*)$ $1 break;

      proxy_pass $frontendBlack;
    }

    # --- BACKEND ---

    location /api {
      rewrite ^/api(/.*)$ $1 break;

      proxy_pass $backendRed;
    }

    location /ws/api {
      rewrite ^/ws/api(/.*)$ $1 break;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      proxy_pass $backendRed;
    }

    location /api/test {
      if ($enableBackendTestRoute = 0) {
        return 403;
      }

      # Remove the /test prefix from the URL
      rewrite ^/api/test(/.*)$ $1 break;

      proxy_pass $backendBlack;
    }

    # --- DEPLOYMENT ---

    # Redirect all traffic to the web server on port 8000
    location /deployment {
      proxy_pass http://deployment-server:8000;
    }
  }

  include /etc/nginx/conf.d/api-proxy.conf;
  include /etc/nginx/conf.d/frontendConfig.conf;
  include /etc/nginx/conf.d/backendConfig.conf;
}