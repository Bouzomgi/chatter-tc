services:
  deployment-server:
    container_name: deployment-server
    build:
      context: ./deploymentServer
    image: deployment-server:latest
    volumes:
      - chatter-nginx-config:/etc/nginx
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - chatter-network

  traffic-controller:
    container_name: traffic-controller
    image: nginx:latest
    depends_on:
      deployment-server:
        condition: service_healthy
    volumes:
      - chatter-nginx-config:/etc/nginx
    ports:
      - 80:80
    networks:
      - chatter-network

  frontend-alpha:
    container_name: frontend-alpha
    build:
      context: ./microServer
    image: micro-server:latest
    networks:
      - chatter-network

  backend-alpha:
    container_name: backend-alpha
    image: bouzomgi/chatter-be
    environment:
      - PORT=${PORT}
      - DATABASE_URL=${DATABASE_URL}
      - STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}
      - AWS_S3_ENDPOINT=${AWS_S3_ENDPOINT}
      - AWS_S3_URL_SIGNER_ENDPOINT=${AWS_S3_URL_SIGNER_ENDPOINT}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - TOKEN_SECRET=${TOKEN_SECRET}
      - FRONTEND_ENDPOINTS=${FRONTEND_ENDPOINTS}
    ports:
      - 4000:4000
    networks:
      - chatter-network

networks:
  chatter-network:
    external: true

volumes:
  chatter-nginx-config:
